(()=>{"use strict";const t={404:!0,index:!0,config:!0,game:!0};class r{static validateRoute(){const e=r.getActualRoute();null!==e?!0!==t[e]&&window.location.replace("?route=404"):window.location.replace("?route=index")}static getActualRoute(){return new URLSearchParams(window.location.search).get("route")}static isMatch(t){const e=r.getActualRoute(),o=t.getAttribute("route");return null===o||null!==e&&e===o}}class e extends HTMLElement{connectedCallback(){this.insertAdjacentHTML("beforeend",'<a style="text-decoration:none" href="?route=index"> <h1>VanillaJS</h1> </a> <index-component route="index"></index-component> <configuration-component route="config"></configuration-component> <game-component route="game"></game-component>')}}class o{static build(t,e,a){r.isMatch(e)&&o.update(t,e,a)}static update(t,r,e){r.innerHTML="",r.insertAdjacentHTML("beforeend",e),o.updateForEach(r),o.updatePropertyValues(r),o.updateClickEvents(t,r,e),o.updateStaticClickEvents(t,r,e)}static updateForEach(t){t.querySelectorAll("[forEach]").forEach((r=>{const e=r.parentNode,o=r.getAttribute("forEach"),a=t[o];void 0!==a&&(a.forEach((t=>{const o=r.cloneNode(!0);o.querySelectorAll("[forEachHere]").forEach((r=>{const e=r.getAttribute("forEachHere");r.innerText=""===e?t:t[e]})),e.append(o)})),r.remove())}))}static updatePropertyValues(t){t.querySelectorAll("[property]").forEach((r=>{const e=r.getAttribute("property"),o=t[e];r.innerText=o}))}static updateClickEvents(t,r,e){r.querySelectorAll("[click]").forEach((a=>{const s=a.getAttribute("click");void 0!==r[s]&&a.addEventListener("click",(()=>{r[s](),o.update(t,r,e)}))}))}static updateStaticClickEvents(t,r,e){r.querySelectorAll("[static]").forEach((a=>{const s=a.getAttribute("static"),n=t[s];void 0!==n&&a.addEventListener("click",(()=>{n(),o.update(t,r,e)}))}))}}class a extends HTMLElement{connectedCallback(){o.build(a,this,'<h3>Index</h3> <ul> <li><a href="?route=config">Create 501 Game (2 Players)</a></li> </ul>')}}class s{static throwErrorIfUndefined(t){if(void 0===t)throw new Error("PropertyGuardError: parameter is undefined")}static throwErrorIfNoString(t){if("string"!=typeof t)throw new Error("PropertyGuardError: parameter is not a string")}static throwErrorIfNoArrayOfStrings(t){t.forEach((t=>{try{this.throwErrorIfNoString(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of strings")}}))}static throwErrorIfNoNumber(t){if("number"!=typeof t)throw new Error("PropertyGuardError: parameter is not a number")}static throwErrorIfNoArrayOfNumbers(t){t.forEach((t=>{try{this.throwErrorIfNoNumber(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of numbers")}}))}static throwErrorIfNoBoolean(t){if("boolean"!=typeof t)throw new Error("PropertyGuardError: parameter is not a boolean")}static throwErrorIfNoArrayOfBooleans(t){t.forEach((t=>{try{this.throwErrorIfNoBoolean(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of booleans")}}))}static throwErrorIfNoArray(t){if(!1===Array.isArray(t))throw new Error("PropertyGuardError: parameter is not an array")}static throwErrorIfNoObject(t){if("object"!=typeof t)throw new Error("PropertyGuardError: parameter is not an object")}static throwErrorIfNoArrayOfObjects(t){t.forEach((t=>{try{this.throwErrorIfNoObject(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of objects")}}))}static throwErrorIfItemIsNotInArray(t,r){if(this.throwErrorIfUndefined(t),this.throwErrorIfNoArray(r),!1===r.includes(t))throw new Error("PropertyGuardError: item is not part of the array")}}class n{static create(t){s.throwErrorIfNoArrayOfStrings(t);const r={};return t.forEach((t=>{r[t]={sets:0,legs:0,required:501,throws:[],average:"-",highestScore:"-",highestFinish:"-",currentLegThrows:[]}})),{playerNames:t,playerStats:r}}static buildPlayerStatsArray(t){n.validate(t);const{playerNames:r,playerStats:e}=t,o=[];return r.forEach((t=>{const r=e[t],a={name:t,sets:r.sets,legs:r.legs,required:r.required,throws:r.throws,average:r.average,highestScore:r.highestScore,highestFinish:r.highestFinish};"-"!==a.average&&(a.average=Number.parseFloat(a.average).toFixed(2)),o.push(a)})),o}static getNextPlayer(t){n.validate(t);let r=0,e=0;t.playerNames.forEach((o=>{const a=t.playerStats[o];r+=a.sets,e+=a.legs}));const o=class{static rotate(t,r,e){const o=JSON.parse(JSON.stringify(t)),a=r+e;for(let t=0;t<a;t+=1)o.push(o.shift());return o}}.rotate(t.playerNames,r,e);let a=o[0],s=t.playerStats[a].currentLegThrows.length;for(let r=1;r<o.length;r+=1){const e=o[r],n=t.playerStats[e].currentLegThrows.length;n<s&&(a=e,s=n)}return a}static submitScore(t,r){if(n.validate(t),s.throwErrorIfNoNumber(r),r<0||r>180)return t;const e=n.getNextPlayer(t),o=t.playerStats[e];if(r>o.required)return n.submitScore(t,0);o.required-=r,o.throws.push(r),o.currentLegThrows.push(r),("-"===o.highestScore||o.highestScore<r)&&(o.highestScore=r);let a=0;if(o.throws.forEach((t=>{a+=t})),o.average=a/o.throws.length,0===o.required){("-"===o.highestFinish||o.highestFinish<r)&&(o.highestFinish=r),o.legs+=1;let e=!1;3===o.legs&&(e=!0,o.sets+=1),t.playerNames.forEach((r=>{const o=t;o.playerStats[r].required=501,o.playerStats[r].currentLegThrows=[],e&&(o.playerStats[r].legs=0)}))}return t}static validate(t){s.throwErrorIfUndefined(t),s.throwErrorIfNoObject(t);const{playerNames:r,playerStats:e}=t;s.throwErrorIfNoArrayOfStrings(r),s.throwErrorIfNoObject(e)}}class i extends HTMLElement{connectedCallback(){o.build(i,this,'<h3>Game Configuration</h3> <input id="player1" type="text" placeholder="Player 1" value="Player 1"> <input id="player2" type="text" placeholder="Player 2" value="Player 2"> <button static="createTwoPlayerGame">Game On</button>')}static async createTwoPlayerGame(){const t=[document.getElementById("player1").value,document.getElementById("player2").value],r=n.create(t),e=await i.generateRandomKey(),o=JSON.stringify(r);localStorage.setItem(e,o),window.location=`?route=game&id=${e}`}static async generateRandomKey(){const t=(new TextEncoder).encode(Math.random()),r=await crypto.subtle.digest("SHA-512",t);return Array.from(new Uint8Array(r)).map((t=>t.toString(16).padStart(2,"0"))).join("").substr(0,16)}}const c='<h3>Good Flight!</h3> <table role="grid"> <thead> <tr> <th scope="col">Player</th> <th scope="col">Sets</th> <th scope="col">Legs</th> <th scope="col">Required</th> </tr> </thead> <tbody> <tr forEach="playerStats"> <th scope="row" forEachHere="name"></th> <td forEachHere="sets"></td> <td forEachHere="legs"></td> <td forEachHere="required"></td> </tr> </tbody> </table> <h3>Next: <span property="nextPlayer"></span></h3> <input id="score" type="number" value="" min="0" max="180"> <button click="submitScore">Submit</button> <h3>Additional Stats</h3> <table role="grid"> <thead> <tr> <th scope="col">Player</th> <th scope="col">Highest Score</th> <th scope="col">Highest Finish</th> <th scope="col">Average</th> </tr> </thead> <tbody> <tr forEach="playerStats"> <th scope="row" forEachHere="name"></th> <td forEachHere="highestScore"></td> <td forEachHere="highestFinish"></td> <td forEachHere="average"></td> </tr> </tbody> </table>';class h extends HTMLElement{static html=c;constructor(){if(super(),!1===r.isMatch(this))return;const t=h.getGameId(),e=localStorage.getItem(t);if(null===e)throw new Error("Game ID is invalid!");this.game=JSON.parse(e),this.updateComponent()}connectedCallback(){o.build(h,this,c)}static getGameId(){const t=new URLSearchParams(window.location.search).get("id");if(null===t)throw new Error("Game ID is null!");return t}updateComponent(){this.playerStats=n.buildPlayerStatsArray(this.game),this.nextPlayer=n.getNextPlayer(this.game)}submitScore(){const t=document.getElementById("score"),{value:r}=t,e=parseInt(r,10);if(Number.isNaN(e))throw new Error("Invalid score: input ist not a number");if(e<0||e>180)throw new Error(`Invalid score of: ${e}`);this.game=n.submitScore(this.game,e);const o=h.getGameId(),a=JSON.stringify(this.game);localStorage.setItem(o,a),this.updateComponent()}}r.validateRoute(),customElements.define("app-component",e),customElements.define("index-component",a),customElements.define("configuration-component",i),customElements.define("game-component",h)})();