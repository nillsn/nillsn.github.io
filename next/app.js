var fe=Object.defineProperty;var w=(H,y)=>fe(H,"name",{value:y,configurable:!0});(()=>{"use strict";var H={};class y{static build(e,t,s){y.validateRoute(s);const o=y.getParameter("route"),r=document.querySelector("div#app");r.innerHTML=e.trim(),t.forEach(n=>{const d=`${n.name.toLowerCase().split("component")[0]}-component`;r.querySelector(d).getAttribute("route")===o&&customElements.define(d,n)})}static getParameter(e){return new URLSearchParams(window.location.search).get(e)}static validateRoute(e){const t=y.getParameter("route");t===null||t==="404"||e.includes(t)===!1&&window.location.replace("?route=404")}}w(y,"AppService");var X='<index-component></index-component> <configuration-component route="config"></configuration-component> <dart-component route="501"></dart-component> <pagenotfound-component route="404"></pagenotfound-component>';const Z=X;class S{static build(e,t){e.innerHTML=t,S.updateStaticClickEvents(e,t)}static updateStaticClickEvents(e,t){e.querySelectorAll("[static]").forEach(o=>{const r=o.getAttribute("static"),n=e.constructor[r];n!==void 0&&o.addEventListener("click",()=>{n(),S.build(e,t)})})}}w(S,"AppComponentService");var D="<h1>#404 - Page Not Found Exception</h1>";const _=D;class k extends HTMLElement{connectedCallback(){S.build(this,_)}}w(k,"PageNotFoundComponent");var ee='<h3>AppSwitch</h3> <button static="openConfig">Create Dart Game</button>';const te=ee;class M extends HTMLElement{connectedCallback(){S.build(this,te)}static openConfig(){window.location="?route=config"}}w(M,"IndexComponent");class A{static throwErrorIfUndefined(e){if(e===void 0)throw new Error("PropertyGuardError: parameter is undefined")}static throwErrorIfNoString(e){if(typeof e!="string")throw new Error("PropertyGuardError: parameter is not a string")}static throwErrorIfNoArrayOfStrings(e){e.forEach(t=>{try{this.throwErrorIfNoString(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of strings")}})}static throwErrorIfNoNumber(e){if(typeof e!="number")throw new Error("PropertyGuardError: parameter is not a number")}static throwErrorIfNoArrayOfNumbers(e){e.forEach(t=>{try{this.throwErrorIfNoNumber(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of numbers")}})}static throwErrorIfNoBoolean(e){if(typeof e!="boolean")throw new Error("PropertyGuardError: parameter is not a boolean")}static throwErrorIfNoArrayOfBooleans(e){e.forEach(t=>{try{this.throwErrorIfNoBoolean(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of booleans")}})}static throwErrorIfNoArray(e){if(Array.isArray(e)===!1)throw new Error("PropertyGuardError: parameter is not an array")}static throwErrorIfNoObject(e){if(typeof e!="object")throw new Error("PropertyGuardError: parameter is not an object")}static throwErrorIfNoArrayOfObjects(e){e.forEach(t=>{try{this.throwErrorIfNoObject(t)}catch{throw new Error("PropertyGuardError: parameter is not an array of objects")}})}static throwErrorIfItemIsNotInArray(e,t){if(this.throwErrorIfUndefined(e),this.throwErrorIfNoArray(t),t.includes(e)===!1)throw new Error("PropertyGuardError: item is not part of the array")}}w(A,"PropertyGuardService");class v{static Serialize(e,t){A.throwErrorIfNoObject(t),A.throwErrorIfNoString(e);const s=JSON.stringify(t);localStorage.setItem(e,s)}static Deserialize(e){A.throwErrorIfNoString(e);const t=localStorage.getItem(e);if(t!==null)return JSON.parse(t)}}w(v,"JsonSerializationService");var re='<h3>Game Configuration</h3> <label><h5>Number of Players</h5></label> <select id="numberOfPlayers" required> <option value="1">1 Player</option> <option value="2" selected="selected">2 Players</option> <option value="3">3 Players</option> <option value="4">4 Players</option> <option value="5">5 Players</option> <option value="6">6 Players</option> </select> <br> <br> <label><h5>Player Names</h5></label> <input id="player1" type="text" placeholder="Player 1" value="Player 1"> <input id="player2" type="text" placeholder="Player 2" value="Player 2"> <input id="player3" type="text" placeholder="Player 3" value="Player 3" hidden> <input id="player4" type="text" placeholder="Player 4" value="Player 4" hidden> <input id="player5" type="text" placeholder="Player 5" value="Player 5" hidden> <input id="player6" type="text" placeholder="Player 6" value="Player 6" hidden> <button static="createGame">Game On</button>';const ne=re,E={legStatus:{new:"new",ongoing:"ongoing",closed:"closed"}};class F{static rotate(e,t,s){const o=JSON.parse(JSON.stringify(e)),r=t+s;for(let n=0;n<r;n+=1)o.push(o.shift());return o}}w(F,"PlayerNameRotationService");class u{static create(e,t){A.throwErrorIfNoString(e),A.throwErrorIfNoArrayOfStrings(t);const s=new Date,r=`${s.toLocaleString("en-US",{month:"long"})} ${s.getDate()}, ${s.getFullYear()}`,n=`${s.toISOString().split("T")[0]}.json`,a={},d={},c={},i={},h={},p={},N={},q={},l={},g={},P={};return t.forEach(f=>{d[f]=0,i[f]=0,c[f]=501,h[f]=[],a[f]=[],p[f]="-",N[f]="-",q[f]="-",l[f]="-",g[f]="-",P[f]="-"}),{date:r,dateFileName:n,id:e,legScores:a,legs:d,players:t,required:c,scores:h,sets:i,highestScore:p,highestFinish:N,mostFrequentScore:q,gameAverage:l,legAverage:g,bestLegAverage:P}}static getNextPlayer(e){if(u.getStatus(e)===E.legStatus.closed)return;let s=0,o=0;e.players.forEach(d=>{const c=e.sets[d],i=e.legs[d];s+=c,o+=i});const r=F.rotate(e.players,s,o);let n=r[0],a=e.legScores[n].length;if(a===0)return n;for(let d=1;d<r.length;d+=1){const c=r[d],i=e.legScores[c].length;i<a&&(n=c,a=i)}return n}static getStatus(e){const{legScores:t,players:s,required:o}=e;let r=!1,n=!1;return s.forEach(a=>{t[a].length>0&&(r=!0),o[a]===0&&(n=!0)}),r===!1?E.legStatus.new:n?E.legStatus.closed:E.legStatus.ongoing}static closeLeg(e){if(u.getStatus(e)!==E.legStatus.closed)throw Error("cannot finish unfinished leg");let s;if(e.players.forEach(n=>{const a=Number.parseFloat(e.legAverage[n]);e.bestLegAverage[n]==="-"&&(e.bestLegAverage[n]=a.toFixed(2));const d=Number.parseFloat(e.bestLegAverage[n]);if(a>d&&(e.bestLegAverage[n]=a.toFixed(2)),e.required[n]===0){s=n;const i=e.legScores[n],{length:h}=i,p=i[h-1];(e.highestFinish[n]==="-"||e.highestFinish[n]<p)&&(e.highestFinish[n]=p)}e.legScores[n].forEach(i=>{e.scores[n].push(i)}),e.legScores[n]=[],e.required[n]=501}),s===void 0)throw Error("winner === undefined!!!");const o=e.legs[s];(o===0||o===1)&&(e.legs[s]+=1),o===2&&(e.sets[s]+=1,e.players.forEach(n=>{e.legs[n]=0}));let r=e;return r=u.updateLegAverage(r),r}static submitScore(e,t){if(A.throwErrorIfNoNumber(t),u.getStatus(e)===E.legStatus.closed)throw new Error("cannot submit score on finished leg");if(t<0||t>180)throw new Error("invalid score");if([163,166,169,172,173,175,176,178,179].includes(t))throw new Error("impossible score");const r=u.getNextPlayer(e),n=e.required[r];if(t>n)throw new Error(`invalid score '${t}' for player '${r}' while required is '${n}'`);e.legScores[r].push(t),e.required[r]=n-t;let a=0,d=0;e.legScores[r].forEach(h=>{a+=h,d+=1});const c=Number.parseFloat(a/d).toFixed(2);e.legAverage[r]=c;let i=e;return i=u.updateHighestScore(i),i=u.updateLegAverage(i),i=u.updateGameAverage(i),i=u.updateMostFrequentScore(i),i}static getWinner(e){if(u.getStatus(e)!==E.legStatus.closed)throw new Error("cannot get winner if leg is not closed");let s;return e.players.forEach(o=>{e.required[o]===0&&(s=o)}),s}static undoScore(e){if(u.getStatus(e)===E.legStatus.new)throw new Error("cannot undo score on new leg");let s=0,o=0;e.players.forEach(i=>{const h=e.sets[i],p=e.legs[i];s+=h,o+=p});const r=F.rotate(e.players,s,o);let n=r[0],a=e.legScores[n].length;for(let i=1;i<r.length;i+=1){const h=r[i],p=e.legScores[h].length;p>=a&&(n=h,a=p)}const d=e.legScores[n].pop();e.required[n]+=d;let c=e;return c=u.updateHighestScore(c),c=u.updateLegAverage(c),c=u.updateGameAverage(c),c=u.updateMostFrequentScore(c),c}static updateHighestScore(e){return e.players.forEach(t=>{const s=e.scores[t],o=e.legScores[t];if(s.length===0&&o.length===0){e.highestScore[t]="-";return}let r=0;e.scores[t].forEach(n=>{n>r&&(r=n)}),e.legScores[t].forEach(n=>{n>r&&(r=n)}),r>0&&(e.highestScore[t]=r)}),e}static updateLegAverage(e){return e.players.forEach(t=>{const s=e.legScores[t];if(s.length===0)e.legAverage[t]="-";else{let o=0;s.forEach(n=>{o+=n});const r=Number.parseFloat(o/s.length).toFixed(2);e.legAverage[t]=r}}),e}static updateGameAverage(e){return e.players.forEach(t=>{const s=e.scores[t],o=e.legScores[t];if(s.length===0&&o.length===0){e.gameAverage[t]="-";return}let r=0;s.forEach(d=>{r+=d}),o.forEach(d=>{r+=d});const n=s.length+o.length,a=Number.parseFloat(r/n).toFixed(2);e.gameAverage[t]=a}),e}static getScoreDistribution(e,t){A.throwErrorIfNoObject(e),A.throwErrorIfNoString(t);const s=e.scores[t].concat(e.legScores[t]),o={};return s.forEach(r=>{o[r]===void 0?o[r]=1:o[r]+=1}),o}static updateMostFrequentScore(e){return e.players.forEach(t=>{const s=u.getScoreDistribution(e,t);if(Object.keys(s).length===0){e.mostFrequentScore[t]="-";return}let o="-",r=-1;Object.keys(s).forEach(n=>{const a=s[n];a>r?(o=n,r=a):a===r&&(o=`${o}, ${n}`)}),e.mostFrequentScore[t]=o}),e}}w(u,"DartService");class I extends HTMLElement{connectedCallback(){S.build(this,ne);const e=document.getElementById("numberOfPlayers");I.showInputFieldsForNumberOfPlayers(e.value),e.addEventListener("change",()=>{I.showInputFieldsForNumberOfPlayers(e.value)})}static showInputFieldsForNumberOfPlayers(e){const t=document.getElementById("player2"),s=document.getElementById("player3"),o=document.getElementById("player4"),r=document.getElementById("player5"),n=document.getElementById("player6");e==="1"&&(t.setAttribute("hidden",""),s.setAttribute("hidden",""),o.setAttribute("hidden",""),r.setAttribute("hidden",""),n.setAttribute("hidden","")),e==="2"&&(t.removeAttribute("hidden"),s.setAttribute("hidden",""),o.setAttribute("hidden",""),r.setAttribute("hidden",""),n.setAttribute("hidden","")),e==="3"&&(t.removeAttribute("hidden"),s.removeAttribute("hidden"),o.setAttribute("hidden",""),r.setAttribute("hidden",""),n.setAttribute("hidden","")),e==="4"&&(t.removeAttribute("hidden"),s.removeAttribute("hidden"),o.removeAttribute("hidden"),r.setAttribute("hidden",""),n.setAttribute("hidden","")),e==="5"&&(t.removeAttribute("hidden"),s.removeAttribute("hidden"),o.removeAttribute("hidden"),r.removeAttribute("hidden"),n.setAttribute("hidden","")),e==="6"&&(t.removeAttribute("hidden"),s.removeAttribute("hidden"),o.removeAttribute("hidden"),r.removeAttribute("hidden"),n.removeAttribute("hidden"))}static async createGame(){const t=document.getElementById("numberOfPlayers").value,s=document.getElementById("player1").value,o=document.getElementById("player2").value,r=document.getElementById("player3").value,n=document.getElementById("player4").value,a=document.getElementById("player5").value,d=document.getElementById("player6").value,c=[s];t==="2"&&c.push(o),t==="3"&&(c.push(o),c.push(r)),t==="4"&&(c.push(o),c.push(r),c.push(n)),t==="5"&&(c.push(o),c.push(r),c.push(n),c.push(a)),t==="6"&&(c.push(o),c.push(r),c.push(n),c.push(a),c.push(d)),I.duplicatePlayerNameCheck(c)===!0&&I.generateRandomKey().then(h=>{const p=`501-${h}`,N=u.create(h,c);v.Serialize(p,N),window.location=`?route=501&id=${h}`})}static async generateRandomKey(){const e=new TextEncoder().encode(Math.random()),t=await crypto.subtle.digest("SHA-512",e);return Array.from(new Uint8Array(t)).map(r=>r.toString(16).padStart(2,"0")).join("").substring(0,16)}static duplicatePlayerNameCheck(e){let t=!0;return e.forEach(s=>{e.filter(r=>r===s).length>1&&(t=!1)}),t}}w(I,"ConfigurationComponent");var oe='<h3 name="heading" id="next">Next: <span id="nextPlayer"></span></h3> <h1 name="infobox" style="text-align:center;font-size:3em" id="required"></h1> <br> <table role="grid" id="game"> <thead> <tr> <th scope="col"><b>Player</b></th> <td cope="col"><b>Sets</b></td> <td cope="col"><b>Legs</b></td> <td cope="col"><b>Required</b></td> </tr> </thead> <tbody> </tbody> </table> <br> <div name="submit"> <input type="number" value="" min="0" max="180"> <button>Submit</button> </div> <div name="undoclose" class="grid"> <button name="undo">Undo</button> <button name="close">Close Leg</button> </div> <h1>Player Stats</h1> <div id="playerStats"> </div> <br> <button id="download">Download Game</button> <br> <p style="text-align:center"><b id="date"></b></p>';const L=oe;class m extends HTMLElement{connectedCallback(){S.build(this,L),m.build(this)}static submitSelector='div[name="submit"]';static undoCloseSelector='div[name="undoclose"]';static build(e){const t=y.getParameter("id"),s=document.getElementById("app");if(t===null){s.innerHTML="";const l=s.appendChild(document.createElement("h1"));throw l.innerHTML="ID IS NOT DEFINED",Error()}const o=`501-${t}`,r=v.Deserialize(o);if(r===void 0){s.innerHTML="";const l=s.appendChild(document.createElement("h1"));throw l.innerHTML="ID IS INVALID",Error()}const n=u.getStatus(r);if(n!==E.legStatus.closed){const l=u.getNextPlayer(r),g=document.getElementById("nextPlayer");g.innerText=l;const P=document.getElementById("required");P.innerText=r.required[l]}if(n===E.legStatus.closed){const l=u.getWinner(r),g=document.getElementById("next");g.innerHTML=`Congratulations, ${l}!`;const P=document.getElementById("required");P.innerHTML="&#x1F3AF;"}const a=document.querySelector("#game tbody"),d=document.querySelector("#playerStats");r.players.forEach(l=>{const g=r.sets[l],P=r.legs[l],G=r.required[l],f=document.createElement("tr"),C=document.createElement("th"),j=document.createElement("td"),z=document.createElement("td"),R=document.createElement("td");C.innerText=l,j.innerText=g,z.innerText=P,R.innerText=G,f.append(C,j,z,R),a.append(f);const x=document.createElement("details"),U=document.createElement("summary"),b=document.createElement("article"),J=document.createElement("table"),B=J.appendChild(document.createElement("tbody"));U.innerText=l;const ie=B.appendChild(document.createElement("tr")),ae=B.appendChild(document.createElement("tr")),le=B.appendChild(document.createElement("tr"));ie.innerHTML=`<th>Highest Score</th><td class='tdright'>${r.highestScore[l]}</td>`,ae.innerHTML=`<th>Highest Finish</th><td class='tdright'>${r.highestFinish[l]}</td>`,le.innerHTML=`<th>Most Frequent Score</th><td class='tdright'>${r.mostFrequentScore[l]}</td>`;const de=b.appendChild(document.createElement("b"));de.innerText="Scorings",b.append(document.createElement("br")),b.append(document.createElement("br")),b.append(J);const V=document.createElement("b");V.innerText="Averages",b.append(document.createElement("br")),b.append(V),b.append(document.createElement("br")),b.append(document.createElement("br"));const W=document.createElement("table"),$=W.appendChild(document.createElement("tbody")),ue=$.appendChild(document.createElement("tr")),he=$.appendChild(document.createElement("tr")),me=$.appendChild(document.createElement("tr"));ue.innerHTML=`<th>Game Average</th><td class='tdright'>${r.gameAverage[l]}</td>`,he.innerHTML=`<th>Leg Average</th><td class='tdright'>${r.legAverage[l]}</td>`,me.innerHTML=`<th>Best Leg Average</th><td class='tdright'>${r.bestLegAverage[l]}</td>`,b.append(W);const O=u.getScoreDistribution(r,l);if(Object.keys(O).length>0){b.append(document.createElement("br"));const pe=b.appendChild(document.createElement("b"));pe.innerText="Score Distribution",b.append(document.createElement("br")),b.append(document.createElement("br"));const ge=b.appendChild(document.createElement("table")).appendChild(document.createElement("tbody"));Object.keys(O).forEach(K=>{const Y=ge.appendChild(document.createElement("tr")),be=Y.appendChild(document.createElement("th")),Q=Y.appendChild(document.createElement("td"));Q.setAttribute("class","tdright"),be.innerText=K,Q.innerText=O[K]})}x.append(U),x.append(document.createElement("br")),x.append(document.createElement("br")),x.append(b),d.append(x)});const c=document.querySelector(`${m.submitSelector} input`),i=document.querySelector(`${m.submitSelector} button`),h=document.querySelector(`${m.undoCloseSelector} button[name="undo"]`),p=document.querySelector(`${m.undoCloseSelector} button[name="close"]`);n===E.legStatus.closed?(c.setAttribute("disabled",""),i.setAttribute("disabled","")):(c.addEventListener("keydown",l=>{l.key==="Enter"&&m.submitScore(e)}),i.onclick=()=>{m.submitScore(e)},c.focus()),n===E.legStatus.new?h.setAttribute("disabled",""):h.onclick=()=>{m.undo(e)},n!==E.legStatus.closed?p.setAttribute("disabled",""):p.onclick=()=>{m.closeLeg(e)};const N=document.getElementById("date");N.innerText=r.date;const q=document.getElementById("download");q.onclick=()=>{const l=JSON.stringify(r,null,4),g=document.createElement("a");g.setAttribute("href",`data:text/plain;charset=utf-8,${l}`),g.setAttribute("download",r.dateFileName),g.style.display="none",document.body.appendChild(g),g.click(),document.body.removeChild(g)}}static submitScore(e){const s=`501-${y.getParameter("id")}`;let o=v.Deserialize(s);const r=document.querySelector(`${m.submitSelector} input`),n=Number.parseInt(r.value,10);if(Number.isInteger(n)===!1)throw new Error(`cannot convert input '${r.value}' to an integer`);o=u.submitScore(o,n),v.Serialize(s,o),S.build(e,L),m.build(e)}static undo(e){const s=`501-${y.getParameter("id")}`;let o=v.Deserialize(s);o=u.undoScore(o),v.Serialize(s,o),S.build(e,L),m.build(e)}static closeLeg(e){const s=`501-${y.getParameter("id")}`;let o=v.Deserialize(s);o=u.closeLeg(o),v.Serialize(s,o),S.build(e,L),m.build(e)}}w(m,"DartComponent");const se=[M,I,m,k],ce=["config","501"];y.build(Z,se,ce)})();
